{
    "collab_server" : "",
    "contents" : "library(shiny)\n\n\n# Define server logic required to draw a histogram\nshinyServer(function(input, output) {\n  \n  values <- reactiveValues(df = misspellings, coldata = NULL, colnames = colnames(misspellings))\n  \n  uploaded_dataframe <- reactive({\n    if (is.null(input[['df_file']]))\n      return(NULL)\n    df <-\n      read.csv(input[['df_file']][['datapath']],\n               check.names = FALSE,\n               stringsAsFactors = FALSE)\n    values[['df']] <- df\n    values[['colnames']] <- colnames(df)\n    return(df)\n  })\n  \n  observeEvent(input[['Go']], {\n    if (length(input[['mychooser']][['right']]) > 0) {\n      coldata <- values[['coldata']]\n      matches <- which(coldata %in% input[['mychooser']][['right']])\n      coldata <- replace(coldata, matches, input[['rename']])\n      values[['df']][[input[['selected_column']]]] <- coldata  \n      values[['coldata']] <- coldata\n    }\n  })\n  \n  colname_choices <- reactive({\n    if (is.null(values[['colnames']])) {\n      values[['colnames']] <- colnames(uploaded_dataframe())\n    }\n    return(values[['colnames']])\n  })\n  \n  output[['select_column']] <- renderUI({\n    selectInput('selected_column',\n                'Select Column',\n                c(Choose = '', colname_choices()),\n                selectize = TRUE)\n  })\n  \n  column_data <- reactive({\n    input[['Go']]\n    if (is.null(input[['selected_column']])) return(NULL)\n    values[['coldata']] <- values[['df']][[input[['selected_column']]]]\n    if (trimws(input[['fuzzy_search']]) == \"\") {\n      return(values[['coldata']])\n    } else {\n      matches <- agrep(input[['fuzzy_search']], values[['coldata']], max=input[['fuzzy_threshold']])\n      return(values[['coldata']][matches])\n    }\n  })\n  \n  left_label <- reactive({\n    if (length(column_data()) > 0) {\n      leftlabel <- paste0(\"Original Data - \", length(column_data()), \" Matches\")\n    } else leftlabel <- \"Original Data\"\n  })\n  \n  output[['custom_selector']] <- renderUI({\n    input[['Go']]\n    input[['selected_column']]\n    input[['fuzzy_threshold']]\n    input[['df_file']]\n    chooserInput(\"mychooser\", left_label(), \"Data Selected for Renaming\",\n                 column_data(), c(), size = 30, multiple = TRUE\n    )\n  })\n  \n})",
    "created" : 1497467549255.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "620810943",
    "id" : "356BDC50",
    "lastKnownWriteTime" : 1497470950,
    "last_content_update" : 1497470950892,
    "path" : "C:/Users/oirera02/Desktop/FuzzyCleaner/inst/shiny/server.R",
    "project_path" : "inst/shiny/server.R",
    "properties" : {
        "marks" : "<:31,0\n>:34,0"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}